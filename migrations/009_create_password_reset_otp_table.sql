-- Migration: 009_create_password_reset_otp_table.sql
-- Descri√ß√£o: Cria tabela para armazenar c√≥digos OTP tempor√°rios para redefini√ß√£o de senha
-- Data: $(date)

-- Verifica se a tabela j√° existe
DO $$
BEGIN
    IF NOT EXISTS (SELECT FROM information_schema.tables 
                   WHERE table_schema = 'public' 
                   AND table_name = 'password_reset_otp') THEN
        
        RAISE NOTICE 'üìß Criando tabela password_reset_otp...';
        
        CREATE TABLE password_reset_otp (
            id_otp UUID PRIMARY KEY DEFAULT gen_random_uuid(),
            id_usuario UUID NOT NULL, -- Refer√™ncia ao usu√°rio
            email_usuario VARCHAR(100) NOT NULL, -- Mantido para facilitar logs e verifica√ß√µes
            codigo_otp VARCHAR(6) NOT NULL, -- C√≥digo de 6 d√≠gitos
            tentativas INTEGER DEFAULT 0, -- Contador de tentativas de verifica√ß√£o
            usado BOOLEAN DEFAULT FALSE, -- Se o OTP j√° foi usado
            data_criacao TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            data_expiracao TIMESTAMP NOT NULL, -- OTP expira em X minutos
            
            -- Foreign Key para garantir integridade
            CONSTRAINT fk_password_reset_usuario FOREIGN KEY (id_usuario) REFERENCES usuario(id_usuario) ON DELETE CASCADE,
            
            -- Constraint √∫nica para usu√°rio + c√≥digo
            CONSTRAINT idx_usuario_otp UNIQUE (id_usuario, codigo_otp)
        );
        
        -- Criar √≠ndices para performance
        CREATE INDEX IF NOT EXISTS idx_password_reset_id_usuario ON password_reset_otp(id_usuario);
        CREATE INDEX IF NOT EXISTS idx_password_reset_email_usuario ON password_reset_otp(email_usuario);
        CREATE INDEX IF NOT EXISTS idx_password_reset_codigo_otp ON password_reset_otp(codigo_otp);
        CREATE INDEX IF NOT EXISTS idx_password_reset_data_expiracao ON password_reset_otp(data_expiracao);
        
        -- Coment√°rios descritivos
        COMMENT ON TABLE password_reset_otp IS 'Tabela para armazenar c√≥digos OTP tempor√°rios para redefini√ß√£o de senha';
        COMMENT ON COLUMN password_reset_otp.id_otp IS 'Identificador √∫nico do OTP';
        COMMENT ON COLUMN password_reset_otp.id_usuario IS 'Refer√™ncia ao usu√°rio que solicitou a redefini√ß√£o';
        COMMENT ON COLUMN password_reset_otp.email_usuario IS 'Email do usu√°rio (para logs e verifica√ß√µes)';
        COMMENT ON COLUMN password_reset_otp.codigo_otp IS 'C√≥digo OTP de 6 d√≠gitos';
        COMMENT ON COLUMN password_reset_otp.tentativas IS 'N√∫mero de tentativas de verifica√ß√£o do c√≥digo';
        COMMENT ON COLUMN password_reset_otp.usado IS 'Indica se o OTP j√° foi utilizado';
        COMMENT ON COLUMN password_reset_otp.data_criacao IS 'Data e hora de cria√ß√£o do OTP';
        COMMENT ON COLUMN password_reset_otp.data_expiracao IS 'Data e hora de expira√ß√£o do OTP';
        
        RAISE NOTICE '‚úÖ Tabela password_reset_otp criada com sucesso!';
        
    ELSE
        RAISE NOTICE '‚ö†Ô∏è  Tabela password_reset_otp j√° existe, pulando cria√ß√£o...';
    END IF;
END
$$;
